services:
  # User Service
  user-service:
    build: ./users
    env_file: ../.env
    environment:
      - DATABASE_URL=postgresql://postgres:123456@user-db:5432/user_db
      - RABBITMQ_URL=amqp://rabbitmq:5672
    ports:
      - '3001:3000'
    depends_on:
      user-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # Auth Service
  auth-service:
    build: ./auth
    env_file: ../.env
    environment:
      - DATABASE_URL=postgresql://postgres:123456@auth-db:5432/auth_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - RABBITMQ_URL=amqp://rabbitmq:5672
    ports:
      - '3002:3000'
    depends_on:
      - auth-db
      - redis
      - rabbitmq

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - '5672:5672' # AMQP protocol
      - '15672:15672' # Management UI
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'check_running']
      interval: 10s
      timeout: 5s
      retries: 5

  # Базы данных
  user-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: user_db
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d user_db']

  auth-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: auth_db
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d auth_db']

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
